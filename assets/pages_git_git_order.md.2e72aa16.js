import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.cfbd61a4.js";const x=JSON.parse('{"title":"Git命令大全","description":"","frontmatter":{},"headers":[],"relativePath":"pages/git/git_order.md","filePath":"pages/git/git_order.md","lastUpdated":null}'),p={name:"pages/git/git_order.md"},e=l(`<h1 id="git命令大全" tabindex="-1">Git命令大全 <a class="header-anchor" href="#git命令大全" aria-label="Permalink to &quot;Git命令大全&quot;">​</a></h1><h2 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h2><p><strong>本地仓库与远程仓库交互之前，必须先进行本地仓库版本控制</strong></p><p><strong>一定先进行本地仓库版本控制，再进行其他操作</strong></p><h3 id="_1-本地仓库操作" tabindex="-1">1. 本地仓库操作 <a class="header-anchor" href="#_1-本地仓库操作" aria-label="Permalink to &quot;1. 本地仓库操作&quot;">​</a></h3><ol><li>本地仓库版本控制：将所有代码提交到版本区进行版本控制</li></ol><ul><li><code>git init</code> 初始化 git 仓库（一次）</li><li><code>git add .</code> 将工作区代码提交到暂存区保管</li><li><code>git commit -m xxx</code> 将暂存区代码提交到版本区进行版本控制</li></ul><ol start="2"><li>分支操作</li></ol><ul><li><code>git checkout -b xxx</code> 新建并切换到 xxx 分支</li><li><code>git checkout xxx</code> 切换到 xxx 分支</li><li><code>git merge xxx</code> 在当前分支合并 xxx 分支的内容</li><li><code>git branch</code> 查看所有分支</li><li><code>git branch -d xxx</code> 删除 xxx 分支</li></ul><h3 id="_2-本地仓库与远程仓库的交互" tabindex="-1">2. 本地仓库与远程仓库的交互 <a class="header-anchor" href="#_2-本地仓库与远程仓库的交互" aria-label="Permalink to &quot;2. 本地仓库与远程仓库的交互&quot;">​</a></h3><ol><li>本地有仓库，远程没有仓库</li></ol><ul><li>新建远程仓库</li><li>先进行本地仓库版本控制 <ul><li><code>git init</code></li><li><code>git add .</code></li><li><code>git commit -m xxx</code></li></ul></li><li>本地仓库与远程仓库关联起来 <ul><li><code>git remote add origin xxx</code></li></ul></li><li>在将本地仓库代码推送到远程仓库保管 <ul><li><code>git push -u origin master</code></li><li>只有 master 分支推送指令可以简写 <code>git push</code></li></ul></li><li>本地新建开发分支 <ul><li><code>git checkout -b xxx</code></li></ul></li><li>在开发分支代码推送到远程仓库保管 <ul><li><code>git push origin xxx</code></li></ul></li></ul><ol start="2"><li>远程有仓库，本地没有仓库（去公司入职场景）</li></ol><ul><li><code>git clone xxx</code> 将远程仓库克隆到本地来 (公司需要提供克隆仓库地址，账号和密码)</li><li><code>cd xxx</code> 进入仓库内</li><li><code>git fetch origin xxx:xxx</code> 将远程仓库 xxx 分支拉取到本地仓库 xxx 分支上来（本地仓库没有 xxx 分支会自动创建）</li><li><code>git checkout xxx</code> 切换到 xxx 分支，将来进行开发</li></ul><ol start="3"><li>常见问题</li></ol><ul><li><p>问题：拉取老师远程仓库代码报错</p><ul><li>原因：本地修改老师代码，老师也修改远程代码，出现冲突，就会报错</li><li>解决： <ul><li><code>git reset --hard HEAD^</code> 回退到上一个版本</li><li><code>git pull origin xxx</code> 重新拉取老师代码</li></ul></li></ul></li><li><p>问题：不清楚代码是否进行了本地仓库版本控制</p><ul><li>解决： <ul><li><code>git status</code></li><li>红色位于工作区</li><li>绿色位于暂存区</li><li>没有就是版本区</li></ul></li></ul></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mkdir </span><span style="color:#79B8FF;">XX</span><span style="color:#E1E4E8;">：创建一个空目录 XX指目录名</span></span>
<span class="line"><span style="color:#E1E4E8;">pwd：显示当前目录的路径</span></span>
<span class="line"><span style="color:#E1E4E8;">cat xx：查看xx文件内容</span></span>
<span class="line"><span style="color:#E1E4E8;">git init：吧当前的目录变成可以管理的git仓库，生成隐藏的.git文件</span></span>
<span class="line"><span style="color:#E1E4E8;">git add xx：把xx文件添加到暂存区</span></span>
<span class="line"><span style="color:#E1E4E8;">git commit </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">m “xx”：提交文件 </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">m后面的是注释</span></span>
<span class="line"><span style="color:#E1E4E8;">git status：查看仓库状态</span></span>
<span class="line"><span style="color:#E1E4E8;">git log：查看历史记录</span></span>
<span class="line"><span style="color:#E1E4E8;">git reset </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">hard </span><span style="color:#79B8FF;">HEAD</span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;">：网上回退一个版本</span></span>
<span class="line"><span style="color:#E1E4E8;">git reflog：查看历史记录的版本号id</span></span>
<span class="line"><span style="color:#E1E4E8;">git checkout </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;"> xx：把xx文件在工作区的修改全部撤销</span></span>
<span class="line"><span style="color:#E1E4E8;">git rm xx：删除xx文件 之后要commit</span></span>
<span class="line"><span style="color:#E1E4E8;">git remote add origin </span><span style="color:#B392F0;">https</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//github.com/qiuhaifeng01/a.git 关联一个远程库</span></span>
<span class="line"><span style="color:#E1E4E8;">git push </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">u（第一次要用</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">u以后不用）origin master：把当前master分支推送到远程库</span></span>
<span class="line"><span style="color:#E1E4E8;">git clone </span><span style="color:#B392F0;">https</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//github.com/xxxxx   从远程库中克隆</span></span>
<span class="line"><span style="color:#E1E4E8;">git checkout </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">b dev：创建dev分支 并切换到dev分支上</span></span>
<span class="line"><span style="color:#E1E4E8;">git branch：查看当前所有的分支</span></span>
<span class="line"><span style="color:#E1E4E8;">git checkout master：切换回master分支</span></span>
<span class="line"><span style="color:#E1E4E8;">git merge dev：在当前分支合并dev分支</span></span>
<span class="line"><span style="color:#E1E4E8;">git branch </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d dev：删除dev分支</span></span>
<span class="line"><span style="color:#E1E4E8;">git branch xxx：创建分支xxx</span></span>
<span class="line"><span style="color:#E1E4E8;">git remote：查看远程库信息</span></span>
<span class="line"><span style="color:#E1E4E8;">git remote </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">v查看远程库的详细信息</span></span>
<span class="line"><span style="color:#E1E4E8;">git pull origin master 将远程库的更新拉取到本地来</span></span>
<span class="line"><span style="color:#E1E4E8;">git push origin master：git会把master分支推送到远程库对应的分支上</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">主要用下面三个</span></span>
<span class="line"><span style="color:#E1E4E8;">git checkout </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">b dev：创建dev分支 并切换到dev分支上</span></span>
<span class="line"><span style="color:#E1E4E8;">git remote add origin </span><span style="color:#B392F0;">https</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//github.com/Shmi1y/six-power.git 关联一个远程库</span></span>
<span class="line"><span style="color:#E1E4E8;">git push </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">u（第一次要用</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">u以后不用）origin master：把当前自己的分支推送到远程库</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mkdir </span><span style="color:#005CC5;">XX</span><span style="color:#24292E;">：创建一个空目录 XX指目录名</span></span>
<span class="line"><span style="color:#24292E;">pwd：显示当前目录的路径</span></span>
<span class="line"><span style="color:#24292E;">cat xx：查看xx文件内容</span></span>
<span class="line"><span style="color:#24292E;">git init：吧当前的目录变成可以管理的git仓库，生成隐藏的.git文件</span></span>
<span class="line"><span style="color:#24292E;">git add xx：把xx文件添加到暂存区</span></span>
<span class="line"><span style="color:#24292E;">git commit </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">m “xx”：提交文件 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">m后面的是注释</span></span>
<span class="line"><span style="color:#24292E;">git status：查看仓库状态</span></span>
<span class="line"><span style="color:#24292E;">git log：查看历史记录</span></span>
<span class="line"><span style="color:#24292E;">git reset </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">hard </span><span style="color:#005CC5;">HEAD</span><span style="color:#D73A49;">^</span><span style="color:#24292E;">：网上回退一个版本</span></span>
<span class="line"><span style="color:#24292E;">git reflog：查看历史记录的版本号id</span></span>
<span class="line"><span style="color:#24292E;">git checkout </span><span style="color:#D73A49;">--</span><span style="color:#24292E;"> xx：把xx文件在工作区的修改全部撤销</span></span>
<span class="line"><span style="color:#24292E;">git rm xx：删除xx文件 之后要commit</span></span>
<span class="line"><span style="color:#24292E;">git remote add origin </span><span style="color:#6F42C1;">https</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//github.com/qiuhaifeng01/a.git 关联一个远程库</span></span>
<span class="line"><span style="color:#24292E;">git push </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">u（第一次要用</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">u以后不用）origin master：把当前master分支推送到远程库</span></span>
<span class="line"><span style="color:#24292E;">git clone </span><span style="color:#6F42C1;">https</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//github.com/xxxxx   从远程库中克隆</span></span>
<span class="line"><span style="color:#24292E;">git checkout </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">b dev：创建dev分支 并切换到dev分支上</span></span>
<span class="line"><span style="color:#24292E;">git branch：查看当前所有的分支</span></span>
<span class="line"><span style="color:#24292E;">git checkout master：切换回master分支</span></span>
<span class="line"><span style="color:#24292E;">git merge dev：在当前分支合并dev分支</span></span>
<span class="line"><span style="color:#24292E;">git branch </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d dev：删除dev分支</span></span>
<span class="line"><span style="color:#24292E;">git branch xxx：创建分支xxx</span></span>
<span class="line"><span style="color:#24292E;">git remote：查看远程库信息</span></span>
<span class="line"><span style="color:#24292E;">git remote </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">v查看远程库的详细信息</span></span>
<span class="line"><span style="color:#24292E;">git pull origin master 将远程库的更新拉取到本地来</span></span>
<span class="line"><span style="color:#24292E;">git push origin master：git会把master分支推送到远程库对应的分支上</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">主要用下面三个</span></span>
<span class="line"><span style="color:#24292E;">git checkout </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">b dev：创建dev分支 并切换到dev分支上</span></span>
<span class="line"><span style="color:#24292E;">git remote add origin </span><span style="color:#6F42C1;">https</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//github.com/Shmi1y/six-power.git 关联一个远程库</span></span>
<span class="line"><span style="color:#24292E;">git push </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">u（第一次要用</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">u以后不用）origin master：把当前自己的分支推送到远程库</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,17),o=[e];function i(t,c,r,E,d,g){return n(),a("div",null,o)}const u=s(p,[["render",i]]);export{x as __pageData,u as default};
