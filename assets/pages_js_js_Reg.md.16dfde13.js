import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.cfbd61a4.js";const p="/personalblog2/assets/1664376006272.8f65a877.png",b=JSON.parse('{"title":"Javascript正则表达式(RegExp)","description":"","frontmatter":{},"headers":[],"relativePath":"pages/js/js_Reg.md","filePath":"pages/js/js_Reg.md","lastUpdated":null}'),o={name:"pages/js/js_Reg.md"},e=l(`<h1 id="javascript正则表达式-regexp" tabindex="-1">Javascript正则表达式(RegExp) <a class="header-anchor" href="#javascript正则表达式-regexp" aria-label="Permalink to &quot;Javascript正则表达式(RegExp)&quot;">​</a></h1><h1 id="什么是正则表达式" tabindex="-1">什么是正则表达式 <a class="header-anchor" href="#什么是正则表达式" aria-label="Permalink to &quot;什么是正则表达式&quot;">​</a></h1><p>正则表达式也可以理解为规则表达式，一般用检索、替换符合某个规则的字符串。</p><p>作用：检索数据和替换数据。</p><p>常见应用场景：</p><ul><li>表单验证中。如：判断用户输入的满足手机号、邮箱格式等等。</li><li>在一个字符串中找出包含匹配规则的子串。 如：一个字符串“ab234cd567fg89”，找出其中一个或多个连续的数字。[234,567,89]</li><li>替换操作。字符串的隐藏中间四位。如：<code>134****4524</code></li><li>...</li></ul><h2 id="快速入门" tabindex="-1">快速入门 <a class="header-anchor" href="#快速入门" aria-label="Permalink to &quot;快速入门&quot;">​</a></h2><p>需求：找出字符串中含有三个的数字，保存在数组中并返回。</p><p>如字符串：<code>abc123def456gh89</code>，返回数组：<code>[ &#39;123&#39;, &#39;456&#39; ]</code></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;abc123def456gh89&#39;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 定义正则 \\d表示匹配数字，后面跟着的{3}表示匹配\\d三次，即匹配三个连续数字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取字符串match函数，获取正则匹配的结果</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result); </span><span style="color:#6A737D;">// [ &#39;123&#39;, &#39;456&#39; ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;abc123def456gh89&#39;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 定义正则 \\d表示匹配数字，后面跟着的{3}表示匹配\\d三次，即匹配三个连续数字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取字符串match函数，获取正则匹配的结果</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result); </span><span style="color:#6A737D;">// [ &#39;123&#39;, &#39;456&#39; ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="正则的定义" tabindex="-1">正则的定义 <a class="header-anchor" href="#正则的定义" aria-label="Permalink to &quot;正则的定义&quot;">​</a></h1><p>定义有两种方式：</p><ul><li>字面量的形式【推荐】</li><li>new 构造函数方式（new RegExp()）</li></ul><p>字面量的形式创建正则</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">pattern</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">flags;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">pattern</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">flags;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>说明：</p><p>其中pattern就是我们的正则表达式， 两个斜线<code>//</code>称为正则的定界符,<code>flags</code>就是正则表达式的<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp" target="_blank" rel="noreferrer">标识符</a>。</p><p>flags常用的标识有以下几个:</p><ul><li>g：代表global表示全局模式，即正则将被应用于匹配整个字符串，不加g仅会匹配到<strong>第一个</strong>就会停止向后匹配。</li><li>i：代表ignore,匹配的时候，表示<strong>不区分大小写</strong>。</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">var reg = /\\d{3}a/gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">var reg = /\\d{3}a/gi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h1 id="正则语法和案例" tabindex="-1">正则语法和案例 <a class="header-anchor" href="#正则语法和案例" aria-label="Permalink to &quot;正则语法和案例&quot;">​</a></h1><h2 id="原子符和元字符和限定符" tabindex="-1">原子符和元字符和限定符 <a class="header-anchor" href="#原子符和元字符和限定符" aria-label="Permalink to &quot;原子符和元字符和限定符&quot;">​</a></h2><p>直接看下面一张图即可,基本覆盖我们平常常用的正则表达式，足够用：</p><p><img src="`+p+`" alt="1664376006272"></p><h3 id="原子符-普通字符" tabindex="-1">原子符（普通字符） <a class="header-anchor" href="#原子符-普通字符" aria-label="Permalink to &quot;原子符（普通字符）&quot;">​</a></h3><p><strong>什么是原子符？</strong></p><p>就是正则表达式中最小的单元,不可在分割 相当于直接匹配一个写死的固定值。</p><p>当我们写a的时候，就匹配a；写1时，就匹配1。</p><p>如：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 匹配字符串 1a</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">1a</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// \\d代表匹配数字，匹配0-9中的任意一个</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#DBEDFF;">a</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 匹配字符串 1a</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /1a/</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// \\d代表匹配数字，匹配0-9中的任意一个</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#032F62;">a/</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="元字符" tabindex="-1">元字符 <a class="header-anchor" href="#元字符" aria-label="Permalink to &quot;元字符&quot;">​</a></h3><p><strong>什么是元字符？</strong></p><p>指含有<strong>特殊含义</strong>的字符，</p><p><strong>常见元字符</strong>：</p><ul><li><code>\\d</code> :  等价于[0-9],匹配0到9中的任意一个数字 格式： [start-end] 包括边界start和end 如：<code>[4-9]</code> 代表匹配4-9中的任意一个数字</li><li><code>\\D</code> :与\\d相反，等价于<code>[^0-9]</code>,匹配非数字，其中符号<code>^</code>相当于取反操作</li><li><code>\\w</code>: 等价于<code>[0-9a-zA-Z_]</code>,匹配大小写字母数字或下划线中的任意一个</li><li><code>\\W</code> : 与<code>\\w</code>相反匹配任意不是字母、数字或下划线的任意字符 ,等价于与 <code>[^0-9a-zA-Z_]</code></li><li><code>\\s</code>  : 匹配不可见字符，如空格，制表符（tab）等</li><li><code>\\S</code>  : 与\\s相反，匹配可见字符</li><li><code>.</code> : 点号代表匹配除换行符以外的任意字符 (万能匹配)</li></ul><p><strong>字符组：</strong></p><p>使用符号<code>[]</code>括起来的部分称为字符组。也只能匹配字符组范围内的任意一个。</p><p>示例：</p><ul><li><code>[3-9]</code>:匹配数字3到9中的任意一个，等价于 [3456789]。只有数字是连续的才可以用<code>-</code>简写</li><li><code>[abc]</code>： 代表匹配字母abc中的任意一个，等价于[a-c]</li><li><code>[^5-9]</code> ：表示匹配除开数字5到9中的任意一个字符，</li><li><code>[^abc]：</code>等价于<code>[^a-c]</code> 匹配除了abc这几个字母以外的任意字符，符号<code>^</code>相当于取反</li><li><code>[0-9a-c]</code>： 匹配数字0到9，a到c中的任意一个。</li><li><code>[\\dX]</code>： 匹配数字0到9，或字母X中的任意一个。相当于身份证最后一位</li><li><code>[\\u4e00-\\u9fa5]</code>; 匹配单个中文</li></ul><blockquote><p>注意：元子符或字符组仅匹配指定范围内的任意一个值。要匹配多个需要后面跟着限定符来实现</p></blockquote><p>示例：匹配手机号</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1234a91411112222bc123+4561-D_E7891F@q13411112222q.c11411112222om&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 匹配手机号正则：</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 第一是数字1，第二位是3-9中的任意一个,剩下9位都是数字</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">1</span><span style="color:#79B8FF;">[3-9]\\d</span><span style="color:#F97583;">{9}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//  获取字符串匹配正则的结果</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg)</span></span>
<span class="line"><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1234a91411112222bc123+4561-D_E7891F@q13411112222q.c11411112222om&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 匹配手机号正则：</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 第一是数字1，第二位是3-9中的任意一个,剩下9位都是数字</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /1</span><span style="color:#005CC5;">[3-9]\\d</span><span style="color:#D73A49;">{9}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">//  获取字符串匹配正则的结果</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg)</span></span>
<span class="line"><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="限定符-量词" tabindex="-1">限定符(量词) <a class="header-anchor" href="#限定符-量词" aria-label="Permalink to &quot;限定符(量词)&quot;">​</a></h3><p>可以限定匹配的<strong>数量</strong>。</p><p>如：</p><ul><li>+: 匹配 1 个或多个, 即 &gt;=1</li><li>*: 匹配 0 个或多个， 即&gt;=0</li><li>?: 匹配 0 个或1个， 即  &gt;=0, 且 &lt;=1</li><li>{3}: 匹配3次</li><li>{3,}: 最少匹配3次， 即 &gt;=3</li><li>{3,6}: 最少3次，最多6次，  即 &gt;=3 且 &lt;=6</li></ul><p>例1：匹配获取字符串中的http或https的子串。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// s字符可有可无</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;">  </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">https</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// s字符可有可无</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#032F62;">  /https</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">// 是把最左边紧挨规则重复多次</span></span>
<span class="line"><span style="color:#e1e4e8;">let reg = /[a-z]\\d{2}/g; // 等价于 /[a-z]\\d\\d/g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">// 是把最左边紧挨规则重复多次</span></span>
<span class="line"><span style="color:#24292e;">let reg = /[a-z]\\d{2}/g; // 等价于 /[a-z]\\d\\d/g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意：在js中量词默认是贪婪匹配：</p><p>如：{min-max},会匹配最大值max的数量。</p><p>如果不想贪婪匹配可以在量词后面加个问号<code>?</code>转为非贪婪模式，如：{min-max}? 就会匹配min的数量。</p><p>非贪婪模式基本不用，如果真要匹配最小的数量，直接{min}即可。这样更直观，如<code>\\d{3}</code>,匹配三个数字。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">let reg = /\\d{2,5}?/g //  转换为非贪婪匹配：在量词后面加一个？号. 建议 /\\d{2}/g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">let reg = /\\d{2,5}?/g //  转换为非贪婪匹配：在量词后面加一个？号. 建议 /\\d{2}/g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>两个正则相关的函数：</p><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match" target="_blank" rel="noreferrer">str.match(reg)</a>； 获取字符串正则匹配的结果,返回一个数组，没有匹配则返回null</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123abc456def&#39;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg)) </span><span style="color:#6A737D;">// [ &#39;123&#39;, &#39;456&#39; ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123abc456def&#39;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg)) </span><span style="color:#6A737D;">// [ &#39;123&#39;, &#39;456&#39; ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test" target="_blank" rel="noreferrer">reg.test(str)</a>;  检测字符串是否满足正则,满足返回true,否则false,一般表单验证中使用较多</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">i</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;qd123abc456&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str)) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">i</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;qd123abc456&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str)) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="转义字符" tabindex="-1">转义字符 <a class="header-anchor" href="#转义字符" aria-label="Permalink to &quot;转义字符&quot;">​</a></h2><p>在正则中匹配一些特殊字符需要转义，否则匹配不到，如匹配符号<code>? ( ) + * . \\ /</code>等特殊符号，需要在其前面加个反斜杠<code>\\</code>进行转义。</p><ul><li>在正则中含有特殊作用的符号都要转义：如：<code>. + () ? *</code></li><li>没有特殊作用的符号可转也可不转，建议还是转</li></ul><p>如：</p><p>匹配点号 <code>\\.</code></p><p>匹配*号 <code>\\*</code></p><p>匹配一对小括号 <code>\\(\\)</code></p><p>匹配加号+  <code>\\+</code></p><blockquote><p>注意：对于有些特殊字符如@ - _等字符不需要转义也可以匹配到，但是还是建议都加上反斜杠进行转义，这是一个好的习惯，可防止错误。</p></blockquote><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.@+-_?()//*=&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 转义字符，匹配特殊符号</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   在正则中含有特殊作用的符号都要转义：如：. + () ? *</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   没有特殊作用的符号可转也可不转，建议还是转</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   var reg = /\\./g</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   var reg = /@/g</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   var reg = /\\+/g</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   var reg = /\\/\\//g</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   var reg = /\\(\\)/g</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\*</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.@+-_?()//*=&#39;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 转义字符，匹配特殊符号</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   在正则中含有特殊作用的符号都要转义：如：. + () ? *</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   没有特殊作用的符号可转也可不转，建议还是转</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   var reg = /\\./g</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   var reg = /@/g</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   var reg = /\\+/g</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   var reg = /\\/\\//g</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   var reg = /\\(\\)/g</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\*</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>推荐一个正则可视化图形工具，可以以图像化的方式更直观去理解正则表达式,助于理解正则</p><p>在线网址： <a href="https://regexper.com/" target="_blank" rel="noreferrer">https://regexper.com/</a></p><h2 id="或运算" tabindex="-1">或运算| <a class="header-anchor" href="#或运算" aria-label="Permalink to &quot;或运算|&quot;">​</a></h2><p>作用：只要满足竖线<code>|</code>左边或右边的规则即算匹配到。</p><p>例1：匹配字符串nodejs或java。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">nodejs</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">java</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /nodejs</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">java/</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例2：匹配字符串中vue或javascript或css的。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">vue</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">javascript</span><span style="color:#F97583;">|</span><span style="color:#DBEDFF;">css</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /vue</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">javascript</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">css/</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="整体匹配-分组" tabindex="-1">整体匹配（分组） <a class="header-anchor" href="#整体匹配-分组" aria-label="Permalink to &quot;整体匹配（分组）&quot;">​</a></h2><p>语法：<code>（正则表达式</code>）</p><p>如果要匹配一个整体：如<code>（abc){2}</code>,代表把abc作为一个分组来匹配两次。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;abcc34abcabc&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 匹配连续的abc字符</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">abc</span><span style="color:#F97583;">{2}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">(abc)</span><span style="color:#F97583;">{2}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;abcc34abcabc&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 匹配连续的abc字符</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /abc</span><span style="color:#D73A49;">{2}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /(abc)</span><span style="color:#D73A49;">{2}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="匹配正则的开始-和结尾" tabindex="-1">匹配正则的开始（^）和结尾($) <a class="header-anchor" href="#匹配正则的开始-和结尾" aria-label="Permalink to &quot;匹配正则的开始（^）和结尾($)&quot;">​</a></h2><p><code>/^正则/</code>： 需要满足以指定的正则<strong>开头</strong>进行匹配。</p><p><code>/正则$/</code>：需要满足以指定的正则<strong>结尾</strong>进行匹配。</p><p><code>/^正则$/</code>：需要满足以指定的正则<strong>开始和结尾</strong>进行匹配。</p><blockquote><p>需要注意/^ /和<code>[^5-8]</code>的区别：</p><p>/^ /：写在正则表达式的最前面，以满足某个匹配规则开头,</p><p>[^5-8] : 中括号^符号是取反（相反）的意思</p></blockquote><p>例1：找到以<strong>http</strong>或https开头的字符串</p><p>例2：找到以**.com**字符串结尾的字符串</p><p>例3： 找到域名以<strong>http或https开头</strong>，且以<code>.com</code>结尾的字符串</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> domain1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://taobao.cn&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> domain2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://taobao.comcn&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> domain3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ftpshttps://taobao.com&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> domain4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://taobao.com&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 例1：找到以http或https开头的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg1 </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">https</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// console.log(reg.test(domain1)); // true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// console.log(reg.test(domain2)); // true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// console.log(reg.test(domain3)); // false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//  例2：找到以.com字符串结尾的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg2 </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">com</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// console.log(reg2.test(domain1)); // false</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// console.log(reg2.test(domain2)); // false</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// console.log(reg2.test(domain3)); // true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//  例3：找到域名以http或https开头，且以.com结尾的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg3 </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">https</span><span style="color:#F97583;">?</span><span style="color:#79B8FF;">.</span><span style="color:#F97583;">+</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">com</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(domain1)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(domain2)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(domain3)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(domain4)); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> domain1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://taobao.cn&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> domain2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://taobao.comcn&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> domain3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ftpshttps://taobao.com&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> domain4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://taobao.com&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 例1：找到以http或https开头的字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg1 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">https</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(reg.test(domain1)); // true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(reg.test(domain2)); // true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(reg.test(domain3)); // false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//  例2：找到以.com字符串结尾的字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg2 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">com</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(reg2.test(domain1)); // false</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(reg2.test(domain2)); // false</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(reg2.test(domain3)); // true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//  例3：找到域名以http或https开头，且以.com结尾的字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg3 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">https</span><span style="color:#D73A49;">?</span><span style="color:#005CC5;">.</span><span style="color:#D73A49;">+</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">com</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(domain1)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(domain2)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(domain3)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(domain4)); </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="匹配单词边界-b" tabindex="-1">匹配单词边界\\b <a class="header-anchor" href="#匹配单词边界-b" aria-label="Permalink to &quot;匹配单词边界\\b&quot;">​</a></h2><p>语法：<code>\\b</code> ，匹配单词的边界。</p><p><code>\\b</code>匹配的是一个位置，而不是一个字符，一般位于行首、行尾或空格旁边的字符都称为边界位置部分。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">var str = &quot;i have a dream&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">var str = &quot;i have a dream&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>作用：主要应用于匹配单词较多。</p><p>如：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;I have a dream&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">\\b</span><span style="color:#79B8FF;">\\w</span><span style="color:#F97583;">+\\b</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">//获取正则匹配的结果</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg) ); </span><span style="color:#6A737D;">//[&quot;I&quot;, &quot;have&quot;, &quot;a&quot;, &quot;dream&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;I have a dream&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">\\b</span><span style="color:#005CC5;">\\w</span><span style="color:#D73A49;">+\\b</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//获取正则匹配的结果</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg) ); </span><span style="color:#6A737D;">//[&quot;I&quot;, &quot;have&quot;, &quot;a&quot;, &quot;dream&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>注意：单词边界，对中文等其他语言是无效的。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;八戒 悟空 hello 沙僧&#39;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">\\b</span><span style="color:#79B8FF;">\\w</span><span style="color:#F97583;">+\\b</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// [ &#39;hello&#39;,]</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;八戒 悟空 hello 沙僧&#39;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">\\b</span><span style="color:#DBEDFF;">悟空</span><span style="color:#F97583;">\\b</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;八戒 悟空 hello 沙僧&#39;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">\\b</span><span style="color:#005CC5;">\\w</span><span style="color:#D73A49;">+\\b</span><span style="color:#032F62;">/</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// [ &#39;hello&#39;,]</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;八戒 悟空 hello 沙僧&#39;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">\\b</span><span style="color:#032F62;">悟空</span><span style="color:#D73A49;">\\b</span><span style="color:#032F62;">/</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>匹配节点类名：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;box&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;abc def xyz&quot;</span><span style="color:#E1E4E8;">&gt;我是一个盒子&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 获取dom节点的类名</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> box </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;box&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 获取类名</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> boxClassNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> box.className</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(boxClassNames.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg)) </span><span style="color:#6A737D;">// [abc,def,xyz]</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;box&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;abc def xyz&quot;</span><span style="color:#24292E;">&gt;我是一个盒子&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 获取dom节点的类名</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> box </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;box&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 获取类名</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> boxClassNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> box.className</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(boxClassNames.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg)) </span><span style="color:#6A737D;">// [abc,def,xyz]</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="正则对象的相关属性" tabindex="-1">正则对象的相关属性 <a class="header-anchor" href="#正则对象的相关属性" aria-label="Permalink to &quot;正则对象的相关属性&quot;">​</a></h2><p>正则Regexp的每个实例都具有以下属性，通过这些属性可以取得有关正则模式的各种信息。</p><ul><li>source属性。获取正则字符串形式。比如正则为/abc/中的会返回<code>&#39;abc&#39;</code>。</li><li>global: 是否有加标识符g。</li><li>ignoreCase：是否有加标识符i。</li><li>flags属性。返回所有的修饰符。</li><li>lastIndex：正则下一次匹配的起始位置，默认从下标0找起。非全局则始终从0开始。</li></ul><blockquote><p>注意：以上属性都为只读，不可修改。</p></blockquote><h2 id="标识符g和正则lastindex属性关系" tabindex="-1">标识符g和正则lastIndex属性关系 <a class="header-anchor" href="#标识符g和正则lastindex属性关系" aria-label="Permalink to &quot;标识符g和正则lastIndex属性关系&quot;">​</a></h2><p>lastIndex：正则下一次匹配的起始位置，初始值为0</p><ul><li><p>若加了g, lastIndex</p></li><li><p>加标识g。 默认从下标0开始匹配。lastIndex值会不停的变化，正则会基于此值在往后匹配，匹配失败后重置为0.</p></li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;abc24fsdf234f56&quot;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{2}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0  默认从下标为0的位置，开始往后匹配</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 5 会基于上一次匹配到的lastIndex位置继续往后匹配</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 11</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 15</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0 匹配失败后，会把下标lastIndex重置为0</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 5 在不停的重复上面步骤</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;abc24fsdf234f56&quot;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0  默认从下标为0的位置，开始往后匹配</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 5 会基于上一次匹配到的lastIndex位置继续往后匹配</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 11</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 15</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0 匹配失败后，会把下标lastIndex重置为0</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 5 在不停的重复上面步骤</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li>不加标识g。 lastIndex始终从0的位置往后匹配.</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;abc24fsdf234f56&quot;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{2}</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0  </span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0  </span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;abc24fsdf234f56&quot;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#032F62;">/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0  </span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.lastIndex ) </span><span style="color:#6A737D;">// 0  </span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>结论： 何时加g?</p><ul><li>不需要加g情况：当判断一个字符串是否满足正则的时候。即结果是true或false的情况。一般多用于正则的test方法，这种情况不需要加g。</li><li>要加g情况。当要获取正则匹配所有结果的时候。一般用于字符串匹配或替换操作如 str.match() 、 str.replace() 这种情况要加g</li></ul><h2 id="正则案例" tabindex="-1">正则案例 <a class="header-anchor" href="#正则案例" aria-label="Permalink to &quot;正则案例&quot;">​</a></h2><p>写正则的思路【重要】：</p><ol><li>先搞清楚匹配的字符串有哪些常见的格式先列举出来</li><li>根据格式特点去写正则表达式进行匹配。</li><li>是否约束开头和结尾</li></ol><h3 id="手机号正则" tabindex="-1">手机号正则 <a class="header-anchor" href="#手机号正则" aria-label="Permalink to &quot;手机号正则&quot;">​</a></h3><p>如：</p><p>13111122221 18111122221</p><p>观察格式：得出</p><ul><li>第一位是固定1</li><li>第二位[3-9]</li><li>剩下9位都是纯数字</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">1</span><span style="color:#79B8FF;">[3-9]\\d</span><span style="color:#F97583;">{9}$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">1</span><span style="color:#005CC5;">[3-9]\\d</span><span style="color:#D73A49;">{9}$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="qq号正则" tabindex="-1">qq号正则 <a class="header-anchor" href="#qq号正则" aria-label="Permalink to &quot;qq号正则&quot;">​</a></h3><p>1.分析特点   a.纯数字 b. 6-11位 2.根据特点写正则     var reg =  /^d{6,11}$/g;</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//qq号：</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{6,12}$</span><span style="color:#9ECBFF;">/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;123456&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;12345&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;66668888&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1259524356345&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//qq号：</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{6,12}$</span><span style="color:#032F62;">/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;123456&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;12345&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;66668888&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1259524356345&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="邮政正则" tabindex="-1">邮政正则 <a class="header-anchor" href="#邮政正则" aria-label="Permalink to &quot;邮政正则&quot;">​</a></h3><p>特点：6位纯数字</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">var reg = /^\\d{6}$/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">var reg = /^\\d{6}$/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 邮编：6位纯数字</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg2 </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{6}$</span><span style="color:#9ECBFF;">/</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg2.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500800</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg2.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5008001</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 邮编：6位纯数字</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg2 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{6}$</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg2.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">500800</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg2.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5008001</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="身份证号正则" tabindex="-1">身份证号正则 <a class="header-anchor" href="#身份证号正则" aria-label="Permalink to &quot;身份证号正则&quot;">​</a></h3><ul><li>1.特点： <ul><li>a.18位</li><li>b. 最后一个是数字或是X</li></ul></li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 身份证：1、18位   2. 前17位都是数字，最后1位是数字或大写字母X</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg3 </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{17}</span><span style="color:#79B8FF;">[\\dX]</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">i</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;360481189905061120&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;36048118990506112x&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg3.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;36048118990506112X&#39;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 身份证：1、18位   2. 前17位都是数字，最后1位是数字或大写字母X</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg3 </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{17}</span><span style="color:#005CC5;">[\\dX]</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">i</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;360481189905061120&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;36048118990506112x&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg3.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;36048118990506112X&#39;</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="用户名正则" tabindex="-1">用户名正则 <a class="header-anchor" href="#用户名正则" aria-label="Permalink to &quot;用户名正则&quot;">​</a></h3><p>要求： 6～18个字符，可使用字母、数字、下划线，但必须以字母开头</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">[a-zA-Z]\\w</span><span style="color:#F97583;">{5,17}$</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">i</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ggsd1_fd&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ggsd1-fd&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1ggsd1fd&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ggsd1fdhdhgfdyeryrtetert&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">[a-zA-Z]\\w</span><span style="color:#D73A49;">{5,17}$</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">i</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ggsd1_fd&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ggsd1-fd&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1ggsd1fd&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ggsd1fdhdhgfdyeryrtetert&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="电子邮箱正则" tabindex="-1">电子邮箱正则 <a class="header-anchor" href="#电子邮箱正则" aria-label="Permalink to &quot;电子邮箱正则&quot;">​</a></h3><p>常见邮箱如下：</p><p><code>52345235@qq.com</code></p><p><code>mfdf_anfdg6656fai@163.com</code></p><p><code>fa545dfaf@gmail.com</code></p><p><code>wangwei@atguigu.com</code></p><p><code>fad3232@yoo.com.cn</code></p><p>分析：</p><ul><li>@左边： 可以是字母数字下划线，多个 。</li><li>@本身： 匹配@</li><li>@右边：可以是字母数字，多个，在匹配特殊符号<code>.</code>,后面跟着是纯字母2到5位</li></ul><p>注意：雅虎比较特殊，如何匹配，把<code>yoo.</code>或<code>com.</code>当做一个整体来看待，这个整体可以一次或多次。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// fdsfsdfs@qq.com</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// gdg4234_fdfg35@163.fsdfsdfsd</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// gdg42dfd@gmail.com</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// wangwei@atguigu.cn</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// gsfgs@yoo.com.cn</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">\\w</span><span style="color:#F97583;">+</span><span style="color:#DBEDFF;">@(</span><span style="color:#79B8FF;">\\w</span><span style="color:#F97583;">+</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">)</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">[a-zA-Z]</span><span style="color:#F97583;">+$</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">i</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;123456@qq.com&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;123-456@qq.com&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;123456qq.com&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;123456@qqcom&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1fsdf_23456@163.com&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;gsfgs@yoo.com.cn&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// fdsfsdfs@qq.com</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// gdg4234_fdfg35@163.fsdfsdfsd</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// gdg42dfd@gmail.com</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// wangwei@atguigu.cn</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// gsfgs@yoo.com.cn</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\w</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">@(</span><span style="color:#005CC5;">\\w</span><span style="color:#D73A49;">+</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">[a-zA-Z]</span><span style="color:#D73A49;">+$</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">i</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;123456@qq.com&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;123-456@qq.com&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;123456qq.com&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;123456@qqcom&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1fsdf_23456@163.com&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;gsfgs@yoo.com.cn&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="捕获组和反向引用" tabindex="-1">捕获组和反向引用 <a class="header-anchor" href="#捕获组和反向引用" aria-label="Permalink to &quot;捕获组和反向引用&quot;">​</a></h2><p><strong>什么是捕获组？</strong></p><p>答：在正则表达式中使用一些小括号**()**括起来的部分称之为捕获组（分组）。</p><p>语法：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">（正则表达式）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">（正则表达式）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>捕获组的作用：</p><ul><li>把某些正则当整体匹配</li><li>对捕获组匹配的内容进行反向引用</li></ul><p>捕获组特点：会把捕获组匹配到的内容，放到正则缓冲区中，供其他地方反向引用</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ooo1212ooo2323ooo3434ooo1234&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// \\1对应的是第一个分组(\\d)，\\2对应的是第二个分组(\\d)</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">\\d</span><span style="color:#DBEDFF;">)(</span><span style="color:#79B8FF;">\\d</span><span style="color:#DBEDFF;">)</span><span style="color:#F97583;">\\1\\2</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result) </span><span style="color:#6A737D;">// [&#39;1212&#39;, &#39;2323&#39;, &#39;3434&#39;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ooo1212ooo2323ooo3434ooo1234&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// \\1对应的是第一个分组(\\d)，\\2对应的是第二个分组(\\d)</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /(</span><span style="color:#005CC5;">\\d</span><span style="color:#032F62;">)(</span><span style="color:#005CC5;">\\d</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">\\1\\2</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result) </span><span style="color:#6A737D;">// [&#39;1212&#39;, &#39;2323&#39;, &#39;3434&#39;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>正则内使用<code>\\数字</code>的形式，分别对应前面的小括号捕获组匹配的内容。这种捕获的引用也叫反向引用。</p><p>上面正则表达式中\\1代表引用正则缓冲区第1个的括号中内容。</p><ul><li><code>\\1</code>代表引用正则缓冲区中第1个括号中的内容，</li><li><code>\\2</code>代表引用正则缓冲区中第2括号中的内容</li><li><code>\\n</code>代表引用正则缓冲区中第n括号中的内容</li></ul><h2 id="案例-手机号隐藏中间4位" tabindex="-1">案例-手机号隐藏中间4位 <a class="header-anchor" href="#案例-手机号隐藏中间4位" aria-label="Permalink to &quot;案例-手机号隐藏中间4位&quot;">​</a></h2><p>如：手机号15807892578 隐藏中间四位结果为：<code>158****2578</code></p><p>使用字符串的replace替换函数实现：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">str.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(regexp</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">substr, newSubStr)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">str.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(regexp</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">substr, newSubStr)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>案例：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> tel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;13534566789&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#DBEDFF;">)</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{4}</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{4}</span><span style="color:#DBEDFF;">)</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( tel.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(reg,</span><span style="color:#9ECBFF;">&quot;$1****$2&quot;</span><span style="color:#E1E4E8;">) );  </span><span style="color:#6A737D;">// 135****6789</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;13534566789&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">)</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{4}</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{4}</span><span style="color:#032F62;">)/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( tel.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(reg,</span><span style="color:#032F62;">&quot;$1****$2&quot;</span><span style="color:#24292E;">) );  </span><span style="color:#6A737D;">// 135****6789</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>注意：</strong><code>\\n</code><strong>和</strong><code>$n</code><strong>的区别：</strong></p><p><code>\\n</code>是写在正则表达式内部中的，用来引用正则第n个分组的内容。</p><p><code>$n</code>是写在正则表达式外部中的，一般用在正则相关函数中较多，如字符串的replace函数</p><h1 id="基于变量动态创建正则" tabindex="-1">基于变量动态创建正则 <a class="header-anchor" href="#基于变量动态创建正则" aria-label="Permalink to &quot;基于变量动态创建正则&quot;">​</a></h1><p>由于变量的值只有在程序实际运行中才知道具体的值，，因为通过字面量形式创建的正则只能匹配特定规则的字符，而变量它是动态变化，无法知道具体规则，因此创建基于变量的正则时只能使用构造函数的形式。</p><p>示例：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;abc123def456&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 字面量[推荐]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#79B8FF;">\\w</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 等价于下面的构造函数</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RegExp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">d{3}&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;g&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;abc123def456&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 字面量[推荐]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#005CC5;">\\w</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 等价于下面的构造函数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RegExp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">d{3}&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;g&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;my name is dachui ouwen kebi&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;dachui&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RegExp</span><span style="color:#E1E4E8;">(name);  </span><span style="color:#6A737D;">// 基于变量创建的正则</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str) ); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;my name is dachui ouwen kebi&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;dachui&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RegExp</span><span style="color:#24292E;">(name);  </span><span style="color:#6A737D;">// 基于变量创建的正则</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str) ); </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>注意：</p><ul><li>构造函数中的正则中出现了反斜杠 <code>\\</code>要转义，即 <code>\\w</code>要写成<code>\\\\w</code>,而在字面中是不需要</li></ul><h1 id="常见正则相关的方法" tabindex="-1">常见正则相关的方法 <a class="header-anchor" href="#常见正则相关的方法" aria-label="Permalink to &quot;常见正则相关的方法&quot;">​</a></h1><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match" target="_blank" rel="noreferrer">str.match(reg)</a>； 获取字符串正则匹配的结果</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123abc456def&#39;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(reg)) </span><span style="color:#6A737D;">// [ &#39;123&#39;, &#39;456&#39; ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123abc456def&#39;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(reg)) </span><span style="color:#6A737D;">// [ &#39;123&#39;, &#39;456&#39; ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace" target="_blank" rel="noreferrer">str.replace(reg|str,newStr)</a>;  对字符串或正则进行替换</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> tel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;13534566789&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#DBEDFF;">)</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{4}</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{4}</span><span style="color:#DBEDFF;">)</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">( tel.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(reg,</span><span style="color:#9ECBFF;">&quot;$1****$2&quot;</span><span style="color:#E1E4E8;">) );  </span><span style="color:#6A737D;">// 135****6789</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;13534566789&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">)</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{4}</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{4}</span><span style="color:#032F62;">)/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">( tel.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(reg,</span><span style="color:#032F62;">&quot;$1****$2&quot;</span><span style="color:#24292E;">) );  </span><span style="color:#6A737D;">// 135****6789</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test" target="_blank" rel="noreferrer">reg.test(str)</a>;  检测字符串是否满足正则,满足返回true,否则false</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">i</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;qd123abc456&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(reg.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(str)) </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">i</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;qd123abc456&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(str)) </span><span style="color:#6A737D;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec" target="_blank" rel="noreferrer">reg.exec(str)</a>; 获取正则匹配结果和捕获组的结果</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> info </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;36113118990206311X&#39;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{6}</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{8}</span><span style="color:#DBEDFF;">)</span><span style="color:#79B8FF;">\\w</span><span style="color:#F97583;">{4}</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> reg.</span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">(info)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">// 36113118990206311X  正则匹配的结果</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(result[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">// 18990206  第一个捕获组结果</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> info </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;36113118990206311X&#39;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{6}</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{8}</span><span style="color:#032F62;">)</span><span style="color:#005CC5;">\\w</span><span style="color:#D73A49;">{4}</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> reg.</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(info)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;">// 36113118990206311X  正则匹配的结果</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]) </span><span style="color:#6A737D;">// 18990206  第一个捕获组结果</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><p>​ exec案例：提取网页中img标签中的图片地址：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> htmlStr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;p&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;Img src=&#39;1.png&#39;/&gt;&lt;b&gt;哈哈&lt;/b&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;img  src=&#39;2.png&#39;/&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;div&gt;&lt;img src=&#39;3.png&#39;/&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;/p&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#6A737D;">// 找出图片的src地址，存储在数组中</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> reg </span><span style="color:#F97583;">=</span><span style="color:#DBEDFF;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\&lt;</span><span style="color:#DBEDFF;">img</span><span style="color:#79B8FF;">\\s</span><span style="color:#F97583;">+</span><span style="color:#DBEDFF;">src=</span><span style="color:#79B8FF;">[&#39;&quot;]</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">.</span><span style="color:#F97583;">+?</span><span style="color:#DBEDFF;">)</span><span style="color:#79B8FF;">[&#39;&quot;]</span><span style="color:#85E89D;font-weight:bold;">\\/\\&gt;</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">gi</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr))</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr))</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr))</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr)) // null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//   注意：exec每次仅获取第一次匹配的结果，如果要获取所有匹配的结果，需要循环匹配</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> imgArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> result</span></span>
<span class="line"><span style="color:#6A737D;">//   把exec执行结果赋值给result,在判断result</span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> ((result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> reg.</span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">(htmlStr))) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  imgArr.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(result[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(imgArr) </span><span style="color:#6A737D;">// [ &#39;1.png&#39;, &#39;2.png&#39;, &#39;3.png&#39; ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> htmlStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">    &lt;p&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;Img src=&#39;1.png&#39;/&gt;&lt;b&gt;哈哈&lt;/b&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;img  src=&#39;2.png&#39;/&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;div&gt;&lt;img src=&#39;3.png&#39;/&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#032F62;">    &lt;/p&gt;</span></span>
<span class="line"><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#6A737D;">// 找出图片的src地址，存储在数组中</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> reg </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\&lt;</span><span style="color:#032F62;">img</span><span style="color:#005CC5;">\\s</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">src=</span><span style="color:#005CC5;">[&#39;&quot;]</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">.</span><span style="color:#D73A49;">+?</span><span style="color:#032F62;">)</span><span style="color:#005CC5;">[&#39;&quot;]</span><span style="color:#22863A;font-weight:bold;">\\/\\&gt;</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">gi</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr))</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr))</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr))</span></span>
<span class="line"><span style="color:#6A737D;">//   console.log(reg.exec(htmlStr)) // null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//   注意：exec每次仅获取第一次匹配的结果，如果要获取所有匹配的结果，需要循环匹配</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> imgArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> result</span></span>
<span class="line"><span style="color:#6A737D;">//   把exec执行结果赋值给result,在判断result</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> ((result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> reg.</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(htmlStr))) {</span></span>
<span class="line"><span style="color:#24292E;">  imgArr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(result[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(imgArr) </span><span style="color:#6A737D;">// [ &#39;1.png&#39;, &#39;2.png&#39;, &#39;3.png&#39; ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>什么时候用match和exec?</p><ul><li>match：获取正则匹配的结果</li><li>exec：获取正则匹配和捕获组的结果</li></ul>`,177),r=[e];function c(t,y,i,E,d,F){return a(),n("div",null,r)}const u=s(o,[["render",c]]);export{b as __pageData,u as default};
